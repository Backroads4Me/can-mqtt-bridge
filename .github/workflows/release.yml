name: Build and Publish

on:
  release:
    types: [published]

jobs:
  build:
    name: Build ${{ matrix.arch }} add-on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        arch: [aarch64, amd64, armhf, armv7, i386]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:latest

      - name: Set lowercase owner
        id: lowercase
        run: echo "OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            VERSION="${{ github.event.release.tag_name }}"
            # Remove 'v' prefix if present
            VERSION=${VERSION#v}
          else
            # Fallback for manual runs
            VERSION=$(grep -E '^version:' ./can-mqtt-bridge/config.yaml | cut -d'"' -f2)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Generated version: $VERSION"

      - name: Pull base image
        run: docker pull ghcr.io/home-assistant/${{ matrix.arch }}-base:latest

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./can-mqtt-bridge
          file: ./can-mqtt-bridge/Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ env.OWNER }}/${{ matrix.arch }}-can-mqtt-bridge:${{ steps.version.outputs.version }}
          build-args: |
            BUILD_FROM=ghcr.io/home-assistant/${{ matrix.arch }}-base:latest
            BUILD_VERSION=${{ steps.version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false